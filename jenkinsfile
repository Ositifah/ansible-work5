pipeline {
    agent any
    
    environment {
        VENV_PATH = 'appenv'
        FLASK_APP_PATH_CENTOS = '/var/lib/jenkins/workspace/ansible-work5/app.py'
        INVENTORY_PATH = '/var/lib/jenkins/workspace/ansible-work5/hosts.ini'
        PLAYBOOK_PATH_CENTOS = '/var/lib/jenkins/workspace/ansible-work5/03-python.yml'
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    sh 'pwd'
                    git branch: 'main', url: 'https://github.com/Ositifah/ansible-work5.git'
                }
            }
        }

        stage('Setup Virtual Environment') {
            steps {
                script {
                    sh "python3 -m venv $VENV_PATH"
                    withEnv(['PATH+VENV=$VENV_PATH/bin']) {
                        sh "source $VENV_PATH/bin/activate"
                    }
                }
            }
        }

        stage('Install Dependencies') {
            steps {
                script {
                    sh "source $VENV_PATH/bin/activate"
                    sh "pip install Flask"
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    sh "source $VENV_PATH/bin/activate"
                    echo "Assuming tests are run here. Please replace this with actual test commands."
                }
            }
        }
        // stage('Build') {
        //     steps {
        //         script {
        //             sh "source $VENV_PATH/bin/activate"
        //             echo "Run Flask App"
        //             sh "python3 $FLASK_APP_PATH_CENTOS"
        //         }
        //     }
        // }

        stage('Deploy') {
            steps {
                script {
                    // def userInput = input(
                    //     id: 'userInput',
                    //     message: 'Please enter the value for another_variable:',
                    //     parameters: [string(defaultValue: '', description: 'Enter value')]
                    // )

                    ansiblePlaybook credentialsId: '9686f8c1-b260-4ed9-9b85-5123bb581618',
                                    disableHostKeyChecking: true,
                                    installation: 'ansible',
                                    inventory: env.INVENTORY_PATH,
                                    playbook: env.PLAYBOOK_PATH_CENTOS
                                    // extraVars: [
                                    //     "another_variable=${userInput}"
                                    // ]
                }
            }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
            sh "rm -rf $VENV_PATH"
        }
    }
}